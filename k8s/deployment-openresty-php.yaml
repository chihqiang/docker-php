apiVersion: v1
kind: Namespace
metadata:
  name: web-serve  # 命名空间

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: openresty-config
  namespace: web-serve
data:
  nginx.conf: |
    worker_processes 1;
    events {
      worker_connections 1024;
    }
    http {
      include       mime.types;
      default_type  application/octet-stream;
      sendfile        on;
      keepalive_timeout  65;

      server {
        listen 80;
        root /var/www/html;
        index index.php index.html;

        location / {
          # 尝试访问文件，不存在时转发给 index.php
          try_files $uri $uri/ /index.php?$query_string;
        }

        location ~ \.php$ {
          # 转发 PHP 请求到 php-fpm 服务
          fastcgi_pass 127.0.0.1:9000;
          fastcgi_index index.php;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          include fastcgi_params;
        }
      }
    }


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: openresty-php-deployment
  namespace: web-serve
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openresty-php
  template:
    metadata:
      labels:
        app: openresty-php
    spec:
      containers:
        - name: php-fpm
          image: zhiqiangwang/php:7.4-fpm
          volumeMounts:
            - name: www-data
              mountPath: /var/www/html
        - name: openresty
          image: zhiqiangwang/openresty:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - name: www-data
              mountPath: /var/www/html
            - name: openresty-config
              mountPath: /usr/local/openresty/nginx/conf/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: www-data
          emptyDir: {}
        - name: openresty-config
          configMap:
            name: openresty-config

---

apiVersion: v1
kind: Service
metadata:
  name: openresty-php-service
  namespace: web-serve
spec:
  selector:
    app: openresty-php
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: NodePort
